// <auto-generated />
using System;
using Aliquota.Persistance.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Aliquota.Persistance.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Aliquota.Domain.Entities.FinancialProduct", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Deadline")
                        .HasColumnType("int");

                    b.Property<decimal>("MinimalInvestedAmount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("MonthlyIncome")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<int>("Profitability")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FinancialProducts");

                    b.HasData(
                        new
                        {
                            Id = 1m,
                            Deadline = 0,
                            MinimalInvestedAmount = 17.10m,
                            MonthlyIncome = 0.0289m,
                            Name = "ABEV1",
                            Profitability = 3
                        },
                        new
                        {
                            Id = 2m,
                            Deadline = 2,
                            MinimalInvestedAmount = 100.69m,
                            MonthlyIncome = -0.0048m,
                            Name = "ABEV2",
                            Profitability = 2
                        },
                        new
                        {
                            Id = 3m,
                            Deadline = 1,
                            MinimalInvestedAmount = 2.48m,
                            MonthlyIncome = 0.3m,
                            Name = "ABEV3",
                            Profitability = 1
                        },
                        new
                        {
                            Id = 4m,
                            Deadline = 0,
                            MinimalInvestedAmount = 32.78m,
                            MonthlyIncome = -0.064m,
                            Name = "ABEV4",
                            Profitability = 0
                        },
                        new
                        {
                            Id = 5m,
                            Deadline = 2,
                            MinimalInvestedAmount = 48.88m,
                            MonthlyIncome = 0.0397m,
                            Name = "ABEV5",
                            Profitability = 2
                        });
                });

            modelBuilder.Entity("Aliquota.Domain.Entities.Investment", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("FinancialProductId")
                        .HasColumnType("decimal");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("WithdrawDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FinancialProductId");

                    b.ToTable("Investments");

                    b.HasData(
                        new
                        {
                            Id = 1m,
                            Amount = 1000m,
                            FinancialProductId = 1m,
                            Start = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2m,
                            Amount = 5000m,
                            FinancialProductId = 2m,
                            Start = new DateTime(2012, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3m,
                            Amount = 10000m,
                            FinancialProductId = 3m,
                            Start = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4m,
                            Amount = 9500m,
                            FinancialProductId = 4m,
                            Start = new DateTime(2018, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5m,
                            Amount = 2500m,
                            FinancialProductId = 1m,
                            Start = new DateTime(2015, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6m,
                            Amount = 3000m,
                            FinancialProductId = 2m,
                            Start = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7m,
                            Amount = 7500m,
                            FinancialProductId = 4m,
                            Start = new DateTime(2010, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Aliquota.Domain.Entities.Withdraw", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("InvestedTime")
                        .HasColumnType("decimal(18)");

                    b.Property<decimal>("LiquidIncome")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("Profit")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("TaxPercentage")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("Id");

                    b.ToTable("Withdraw");
                });

            modelBuilder.Entity("Aliquota.Domain.Entities.Investment", b =>
                {
                    b.HasOne("Aliquota.Domain.Entities.FinancialProduct", "FinancialProduct")
                        .WithMany()
                        .HasForeignKey("FinancialProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
